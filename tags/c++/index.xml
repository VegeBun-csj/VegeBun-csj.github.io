<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on This is a blog written by VegeBun-csj</title>
    <link>http://VegeBun-csj/github.io/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on This is a blog written by VegeBun-csj</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 30 Aug 2020 15:43:52 +0800</lastBuildDate>
    
	<atom:link href="http://VegeBun-csj/github.io/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>求逆序对(归排变种)</title>
      <link>http://VegeBun-csj/github.io/post/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9%E5%BD%92%E6%8E%92%E5%8F%98%E7%A7%8D/</link>
      <pubDate>Sun, 30 Aug 2020 15:43:52 +0800</pubDate>
      
      <guid>http://VegeBun-csj/github.io/post/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9%E5%BD%92%E6%8E%92%E5%8F%98%E7%A7%8D/</guid>
      <description>逆序对，简单的说就是一个序列中，前面的数的数值比后面的数的数值大，那么这两个数就可以构成一个逆序对。 比如说 1 4 7 2 1 这个序列中，{4，2}{</description>
    </item>
    
    <item>
      <title>快速选择(快排变种)--求第k个数</title>
      <link>http://VegeBun-csj/github.io/post/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%BF%AB%E9%80%9F%E9%80%89%E6%8B%A9%E5%BF%AB%E6%8E%92%E5%8F%98%E7%A7%8D-%E6%B1%82%E7%AC%ACk%E4%B8%AA%E6%95%B0/</link>
      <pubDate>Sun, 30 Aug 2020 14:38:56 +0800</pubDate>
      
      <guid>http://VegeBun-csj/github.io/post/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%BF%AB%E9%80%9F%E9%80%89%E6%8B%A9%E5%BF%AB%E6%8E%92%E5%8F%98%E7%A7%8D-%E6%B1%82%E7%AC%ACk%E4%B8%AA%E6%95%B0/</guid>
      <description>对于求一个序列的第k个数，首先想到的就是将序列进行排序，然后输出第k-1的下标即可，但是排序的算法平均时间复杂度最优的也是O(nlogn)，</description>
    </item>
    
    <item>
      <title>排序(快排与归并)</title>
      <link>http://VegeBun-csj/github.io/post/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E5%BF%AB%E6%8E%92%E4%B8%8E%E5%BD%92%E5%B9%B6/</link>
      <pubDate>Sun, 30 Aug 2020 10:15:11 +0800</pubDate>
      
      <guid>http://VegeBun-csj/github.io/post/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E5%BF%AB%E6%8E%92%E4%B8%8E%E5%BD%92%E5%B9%B6/</guid>
      <description>对于基础算法可以形成模板来进行记忆，主要在于算法的思想和熟练度！！！ 快速排序 基本思想 找分界点，随便找，一般是a[l]，a[r]，a[l+r&amp;</description>
    </item>
    
  </channel>
</rss>