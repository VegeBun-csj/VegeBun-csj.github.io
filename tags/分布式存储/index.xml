<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>分布式存储 on This is a blog written by VegeBun-csj to record the tech</title><link>http://localhost:1313/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/</link><description>Recent content in 分布式存储 on This is a blog written by VegeBun-csj to record the tech</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 26 Nov 2020 18:21:11 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>二分查找</title><link>http://localhost:1313/post/leetcode/%E7%AE%97%E6%B3%95%E5%A5%97%E8%B7%AF%E6%80%BB%E7%BB%93/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><pubDate>Thu, 26 Nov 2020 18:21:11 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E7%AE%97%E6%B3%95%E5%A5%97%E8%B7%AF%E6%80%BB%E7%BB%93/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid><description>二分法 对于二分法非常容易出问题的就是查找的边界问题 下面是两个常用的模板框架： 框架一 1 2 3 4 5 6 7 8 9 10 11 int l = 0; int r = nums.size() - 1; while (l &amp;lt;= r) { int mid =</description></item><item><title>IPFS-js的简单使用</title><link>http://localhost:1313/post/ipfs/ipfs-js%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 29 Aug 2020 14:51:33 +0800</pubDate><guid>http://localhost:1313/post/ipfs/ipfs-js%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid><description/></item></channel></rss>