<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>链表 on This is a blog written by VegeBun-csj</title>
    <link>http://localhost:1313/categories/%E9%93%BE%E8%A1%A8/</link>
    <description>Recent content in 链表 on This is a blog written by VegeBun-csj</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 11 Nov 2020 15:08:34 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/%E9%93%BE%E8%A1%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leetcode142 环形链表II</title>
      <link>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8ii/</link>
      <pubDate>Wed, 11 Nov 2020 15:08:34 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8ii/</guid>
      <description>思路 使用双指针，一个快指针，一个慢指针，需要进行数学推导证明，记住这个规律即可：设置一个快指针，一个慢指针，都一开始从链表head开始，快指</description>
    </item>
    
    <item>
      <title>Leetcode160 相交链表</title>
      <link>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode160-%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Wed, 11 Nov 2020 15:05:15 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode160-%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8/</guid>
      <description>题目链接 https://leetcode-cn.com/problems/intersection-of-two-linked-lists/ 思路 寻找相交的点。本题的解法非常巧妙，采用的双指针，即链表A一个指针ptr1进行遍历，链表B一个指针ptr2进行遍历； 两者一开始都</description>
    </item>
    
    <item>
      <title>Leetcode109 有序链表转换为二叉搜索树</title>
      <link>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode109-%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link>
      <pubDate>Wed, 11 Nov 2020 15:03:56 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode109-%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid>
      <description>题目链接 https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/ 思路 将一个有序的链表转换为二叉搜索树，并且还要求，这个二叉搜索树为平衡二叉树，所以为了保持平衡，选取链表的中间节点为树的根节点，然</description>
    </item>
    
    <item>
      <title>Leetcode61 旋转链表</title>
      <link>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode61-%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Wed, 11 Nov 2020 15:01:50 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode61-%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid>
      <description>题目链接 https://leetcode-cn.com/problems/rotate-list/ 思路3 旋转实际上就是确定新的链表头和链表尾；如果说将一个链表每个节点向右移动k，那么新的链表的表头节点就是从后往前数第k个节点(如</description>
    </item>
    
    <item>
      <title>Leetcode24 两两交换链表中的节点</title>
      <link>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode24-%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link>
      <pubDate>Wed, 11 Nov 2020 14:58:23 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode24-%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid>
      <description>题目链接 https://leetcode-cn.com/problems/swap-nodes-in-pairs/ 思路 要求链表中的节点两两交换，有递归和迭代两种方法：迭代要设置一个虚拟节点； 代码(迭代) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21</description>
    </item>
    
  </channel>
</rss>