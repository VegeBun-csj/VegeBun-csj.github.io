<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>二分法 on This is a blog written by VegeBun-csj to record the tech</title><link>http://localhost:1313/categories/%E4%BA%8C%E5%88%86%E6%B3%95/</link><description>Recent content in 二分法 on This is a blog written by VegeBun-csj to record the tech</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 26 Nov 2020 19:10:04 +0800</lastBuildDate><atom:link href="http://localhost:1313/categories/%E4%BA%8C%E5%88%86%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>Leetcode34 在排序数组中查找元素的第一个和最后一个位置</title><link>http://localhost:1313/post/leetcode/%E5%8F%8C%E6%8C%87%E9%92%88/leetcode34-%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/</link><pubDate>Thu, 26 Nov 2020 19:10:04 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E5%8F%8C%E6%8C%87%E9%92%88/leetcode34-%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/</guid><description>题目描述 给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。 你的算法时间复杂度必须</description></item><item><title>二分查找</title><link>http://localhost:1313/post/leetcode/%E7%AE%97%E6%B3%95%E5%A5%97%E8%B7%AF%E6%80%BB%E7%BB%93/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><pubDate>Thu, 26 Nov 2020 18:21:11 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E7%AE%97%E6%B3%95%E5%A5%97%E8%B7%AF%E6%80%BB%E7%BB%93/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid><description>二分法 对于二分法非常容易出问题的就是查找的边界问题 下面是两个常用的模板框架： 框架一 1 2 3 4 5 6 7 8 9 10 11 int l = 0; int r = nums.size() - 1; while (l &amp;lt;= r) { int mid =</description></item><item><title>Leetcode74 搜索二维矩阵</title><link>http://localhost:1313/post/leetcode/%E5%8F%8C%E6%8C%87%E9%92%88/leetcode74-%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5/</link><pubDate>Thu, 26 Nov 2020 11:29:54 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E5%8F%8C%E6%8C%87%E9%92%88/leetcode74-%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5/</guid><description>题目描述 编写一个高效的算法来判断 m x n 矩阵中，是否存在一个目标值。该矩阵具有如下特性： 每行中的整数从左到右按升序排列。 每行的第一个整数大于前</description></item><item><title>Leetcode35 搜索插入位置</title><link>http://localhost:1313/post/leetcode/%E5%8F%8C%E6%8C%87%E9%92%88/leetcode35-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</link><pubDate>Thu, 26 Nov 2020 09:19:10 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E5%8F%8C%E6%8C%87%E9%92%88/leetcode35-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</guid><description>题目描述 给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。 你可以假设数</description></item></channel></rss>