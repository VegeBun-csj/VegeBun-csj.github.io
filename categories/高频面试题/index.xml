<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>高频面试题 on This is a blog written by VegeBun-csj to record the tech</title><link>http://localhost:1313/categories/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/</link><description>Recent content in 高频面试题 on This is a blog written by VegeBun-csj to record the tech</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 08 Dec 2020 20:00:01 +0800</lastBuildDate><atom:link href="http://localhost:1313/categories/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/index.xml" rel="self" type="application/rss+xml"/><item><title>Leetcode32 最长有效括号</title><link>http://localhost:1313/post/leetcode/%E6%95%B0%E7%BB%84%E6%A0%88%E9%98%9F%E5%88%97/leetcode32-%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</link><pubDate>Tue, 08 Dec 2020 20:00:01 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E6%95%B0%E7%BB%84%E6%A0%88%E9%98%9F%E5%88%97/leetcode32-%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</guid><description>题目描述 给定一个只包含 &amp;lsquo;(&amp;rsquo; 和 &amp;lsquo;)&amp;rsquo; 的字符串，找出最长的包含有效括号的子串的长度。 示例 1: 输入: &amp;ldquo;(()&amp;rdquo; 输出: 2 解释: 最长有效括号子串为 &amp;ldquo;()&amp;rdquo; 示例2 : 输入: &amp;ldquo;)()())&amp;rdquo; 输</description></item><item><title>Leetcode20 有效的括号</title><link>http://localhost:1313/post/leetcode/%E6%95%B0%E7%BB%84%E6%A0%88%E9%98%9F%E5%88%97/leetcode20-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</link><pubDate>Tue, 08 Dec 2020 19:49:22 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E6%95%B0%E7%BB%84%E6%A0%88%E9%98%9F%E5%88%97/leetcode20-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</guid><description>题目描述 给定一个只包括 &amp;lsquo;('，')'，'{'，'}'，'['，']&amp;rsquo; 的字符串，判断字符串是否有效。 有效字符串需满足：</description></item><item><title>Leetcode25 K个一组反转链表</title><link>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode25-k%E4%B8%AA%E4%B8%80%E7%BB%84%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</link><pubDate>Sun, 06 Dec 2020 11:51:37 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode25-k%E4%B8%AA%E4%B8%80%E7%BB%84%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid><description>题目描述 给你一个链表，每 k 个节点一组进行翻转，请你返回翻转后的链表。 k 是一个正整数，它的值小于或等于链表的长度。 如果节点总数不是 k 的整数倍，</description></item><item><title>Leetcode92 反转链表II</title><link>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode92-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8ii/</link><pubDate>Sun, 06 Dec 2020 09:57:06 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode92-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8ii/</guid><description>题目描述 反转从位置 m 到 n 的链表。请使用一趟扫描完成反转。 说明: 1 ≤ m ≤ n ≤ 链表长度。 示例: 输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL, m = 2, n = 4 输出: 1-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;5-&amp;gt;NULL 题目链接 https://leetcode-cn.com/problems/reverse-linked-list-ii 思路 一般而言</description></item><item><title>二叉树的遍历系列_4种</title><link>http://localhost:1313/post/leetcode/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E7%B3%BB%E5%88%97_4%E7%A7%8D/</link><pubDate>Sat, 14 Nov 2020 21:00:34 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E7%B3%BB%E5%88%97_4%E7%A7%8D/</guid><description>题目描述 对二叉树进行前中后层序遍历，分别递归与非递归遍历 题目链接 leetcode 144 https://leetcode-cn.com/problems/binary-tree-preorder-traversal/ leetcode94 https://leetcode-cn.com/problems/binary-tree-inorder-traversal/ leetcode145 https://leetcode-cn.com/problems/binary-tree-postorder-traversal/ 102 https://leetcode-cn.com/problems/binary-tree-level-order-traversal/ 思路 递归遍历 三种遍历的唯一区别就是对根节点的操作和递归操作</description></item><item><title>Leetcode206 反转链表</title><link>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode206-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</link><pubDate>Thu, 12 Nov 2020 14:58:23 +1600</pubDate><guid>http://localhost:1313/post/leetcode/%E9%93%BE%E8%A1%A8/leetcode206-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid><description>题目描述 反转一个单链表。 示例: 1 2 输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL 输出: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL 题目链接 https://leetcode-cn.com/problems/reverse-linked-list/ 思路一 迭代：使用双指针，同样为了操作的一致性，需要创建一个虚拟节点dummpy，</description></item></channel></rss>