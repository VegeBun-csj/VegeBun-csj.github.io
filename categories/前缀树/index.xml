<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>前缀树 on This is a blog written by VegeBun-csj to record the tech</title><link>http://localhost:1313/categories/%E5%89%8D%E7%BC%80%E6%A0%91/</link><description>Recent content in 前缀树 on This is a blog written by VegeBun-csj to record the tech</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 11 Dec 2020 20:46:15 +0800</lastBuildDate><atom:link href="http://localhost:1313/categories/%E5%89%8D%E7%BC%80%E6%A0%91/index.xml" rel="self" type="application/rss+xml"/><item><title>Leetcode208 实现Trie树</title><link>http://localhost:1313/post/leetcode/%E5%89%8D%E7%BC%80%E6%A0%91/leetcode208-%E5%AE%9E%E7%8E%B0trie%E6%A0%91/</link><pubDate>Fri, 11 Dec 2020 20:46:15 +0800</pubDate><guid>http://localhost:1313/post/leetcode/%E5%89%8D%E7%BC%80%E6%A0%91/leetcode208-%E5%AE%9E%E7%8E%B0trie%E6%A0%91/</guid><description>题目描述 实现一个 Trie (前缀树)，包含 insert, search, 和 startsWith 这三个操作。 示例: Trie trie = new Trie(); trie.insert(&amp;ldquo;apple&amp;rdquo;); trie.search(&amp;ldquo;apple&amp;rdquo;); // 返回 true trie.search(&amp;ldquo;app&amp;rdquo;); // 返回 false trie.startsWith(&amp;ldquo;app&amp;rdquo;); // 返回 true trie.insert(&amp;ldquo;app&amp;rdquo;); trie.search(&amp;ldquo;app&amp;rdquo;); // 返回 true 题目链接 https://leetcode-cn.com/problems/implement-trie-prefix-tree 思路 前缀树 根据前</description></item></channel></rss>